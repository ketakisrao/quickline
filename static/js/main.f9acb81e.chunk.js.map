{"version":3,"sources":["assets/prototype/HeroImg.png","Components/CustomNavbar/index.js","Components/Hero/index.js","Discovery/index.js","Home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomNavbar","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","Link","href","Hero","props","info","Container","Row","Col","xs","sm","md","lg","xl","class","src","HeroImg","Discovery","Home","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,kSC4B5BC,MApBf,WACI,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,KAAc,kBAAC,IAAD,CAAMC,GAAG,KAJd,cAKT,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAAaC,MAAM,UAAUJ,GAAG,sBAC5B,kBAACG,EAAA,EAAYE,KAAb,KAAkB,kBAAC,IAAD,CAAMT,GAAG,cAAT,cAClB,kBAACO,EAAA,EAAYE,KAAb,iBACA,kBAACF,EAAA,EAAYE,KAAb,mBAEJ,kBAACJ,EAAA,EAAIK,KAAL,CAAUC,KAAK,SAAf,YACA,kBAACN,EAAA,EAAIK,KAAL,CAAUC,KAAK,SAAf,gB,iDCiBLC,MA/Bf,SAAcC,GAEV,OADWA,EAAMC,KAEb,yBAAKR,UAAU,QACX,6BACI,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnC,yBAAKhB,UAAU,SACX,6BACI,yCACA,8TAQZ,kBAACW,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnC,yBAAKC,MAAM,iBACP,yBAAKC,IAAKC,IAASnB,UAAU,sB,aCT9CoB,MAXf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKpB,UAAU,WACX,4C,MCIDqB,MATf,WACI,OACI,wD,MCsBOC,MAlBf,WACI,OACI,yBAAKtB,UAAU,OACX,kBAAC,IAAD,CAAQuB,SAAS,cACb,kBAAC,EAAD,MACA,yBAAKvB,UAAU,WACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAWL,IAEjC,kBAAC,IAAD,CAAOI,KAAK,aAAaC,UAAWN,SCXxCO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f9acb81e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeroImg.df4c4dff.png\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nconst product_name = \"Quickline\"\nfunction CustomNavbar() {\n    return (\n        <Navbar expand=\"lg\">\n            <Navbar.Brand><Link to=\"/\">{product_name}</Link></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <NavDropdown title=\"Process\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item><Link to=\"/discovery\">Discovery</Link></NavDropdown.Item>\n                        <NavDropdown.Item>Ideation</NavDropdown.Item>\n                        <NavDropdown.Item>Prototype</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"#home\">Solution</Nav.Link>\n                    <Nav.Link href=\"#link\">About Us</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default CustomNavbar;\n","import React from 'react';\nimport CustomNavbar from '../CustomNavbar';\nimport './index.scss';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport HeroImg from '../../assets/prototype/HeroImg.png';\n\nconst product_name = \"Quickline\"\nfunction Hero(props) {\n    var info = props.info;\n    return (\n        <div className=\"hero\">\n            <div>\n                <Container>\n                    <Row>\n                        <Col xs={12} sm={12} md={8} lg={8} xl={8}>\n                            <div className=\"title\">\n                                <div>\n                                    <h3>Prototype</h3>\n                                    <p>We ideated on the features of each prototype that\n                                    would be most useful to our duel channel solution.\n                                    We conducted a competitive analysis of existing best-in-class\n                                    airport applications and secondary research into existing virtual\n                                        queue system technology to inform our design decisions.</p>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12} sm={12} md={4} lg={4} xl={4}>\n                            <div class=\"centered-item\">\n                                <img src={HeroImg} className=\"full-width\" />\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Hero;\n","import React from 'react';\nimport Hero from '../Components/Hero';\nimport './index.scss';\n\nconst info = {\n    title: ''\n};\n\nfunction Discovery() {\n    return (\n        <div>\n            <Hero></Hero>\n            <div className=\"content\">\n                <p>Hi I am KR</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Discovery;\n","import React from 'react';\nimport Hero from '../Components/Hero';\nimport './index.scss';\n\nconst info = {\n    title: ''\n};\n\nfunction Home() {\n    return (\n        <div>\n            hi from home\n            Heyyyyy!!\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport Hero from './Components/Hero';\nimport CustomNavbar from './Components/CustomNavbar';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Discovery from './Discovery';\nimport Home from './Home';\nimport './App.scss';\n\nconst product_name = \"Quickline\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router basename=\"/quickline\">\n                <CustomNavbar></CustomNavbar>\n                <div className=\"content\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}>\n                        </Route>\n                        <Route path=\"/discovery\" component={Discovery}>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}